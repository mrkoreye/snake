body {
  text-align: center;
  max-width: 1000px;
  font-family: monospace;
  margin: 0 auto;
  font-size: 1.5em;
  padding: 0 10px;
}

.game-container {
  position: relative;
  margin: 0 auto;
  display: inline-block;
  border: 2px solid rgb(94, 251, 251);
  box-shadow: 1px 0 19px 3px rgba(0, 0, 0, 0.2);
}

h1 {
  font-size: 5em;
  margin: 10px;
}

h4 {
  max-width: 500px;
  margin: 20px auto;
  font-weight: bold;
}

.space {
  height: 20px;
  width: 20px;
  display: inline-block;
  vertical-align: middle;
  background-color: transparent;
}

.row-snake {
  white-space: nowrap;
}

#messages {
  margin: 20px;
}

.snake {
  background-image: url('assets/music-note-2.png');
  background-size: contain;
  opacity: 0.8;
  background-position: center;
  background-repeat: no-repeat;

  &.up {
    transform: rotate(270deg);
  }

  &.left {
    transform: rotate(180deg);
  }

  &.down {
    transform: rotate(90deg);
  }

  &.snake-head {
    color: red;
    position: relative;
    z-index: 1;
    overflow: visible;
    text-align: center;
    opacity: 1;

    &::after {
      background-image: url('assets/bach.jpeg');
      background-size: contain;
      left: -4px;
      bottom: -5px;
      position: absolute;
      content: '';
      display: inline-block;
      height: 30px;
      width: 30px;
      border-radius: 5px;
      box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.8);
    }
  }
}

.apple,
.paper {
  background-size: contain;
  animation: embiggen 0.5s ease-in-out 1s 5;
  background-position: center;
  background-repeat: no-repeat;
}

.apple {
  background-image: url('assets/music-note-1.png');
}

.paper {
  background-image: url('assets/paper.png');
}

.instructions {
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  max-width: 600px;
  margin: 20px auto;
  z-index: 10;
  padding: 0 5px;

  &.show {
    display: block;
  }

  ul {
    margin: 10px;
    text-align: left;
    list-style-type: lower-greek;

    li {
      margin-top: 10px;
    }
  }

  .snake.snake-head {
    height: 80px;
    width: 80px;

    &::after {
      height: 80px;
      width: 80px;
      left: 0;
      right: 0;
      position: static;
    }
  }

  &.game-over {
    background: rgba(255, 255, 255, 0.9);
    padding: 20px;

    .play-button,
    .stop-button {
      display: inline-block;
      height: 50px;
      width: 50px;
      color: black;
      margin: 20px;
      background-size: contain;
      background-position: center;
      background-repeat: no-repeat;
      cursor: pointer;
    }

    .stop-button {
      background-image: url('assets/stop-button-icon.png');
    }

    .play-button {
      background-image: url('assets/play-button-icon.png');
    }
  }
}

.controls {
  height: 200px;
  max-width: 800px;
  margin: 20px auto;

  .game-button-container {
    position: relative;
    display: inline-block;
    width: 20%;
  }
}

// Code for Arcade button inspired by https://codepen.io/mkvug/pen/meJyr
.game-button {
  position: relative;
  margin: 20px auto;
  display: block;
  text-align: center;
  background: cyan;
  width: 70px;
  height: 70px;
  border-radius: 50%;
  box-shadow: inset 0 0 7px rgba(0, 0, 0, 0.5), inset 0 14px 35px rgba(255, 255, 255, 0.5), 1px 4px 7px rgba(0, 0, 0, 0.5), 1px 1px 2px rgba(0, 0, 0, 0.5);
  box-sizing: border-box;
  cursor: pointer;
  transition: box-shadow 0.1s ease;

  &.start {
    background: red;

    &::before {
      background: red;
    }
  }

  &::before {
    content: '';
    display: block;
    position: absolute;
    z-index: -5;
    width: 90px;
    height: 90px;
    top: -9px;
    left: -10px;
    border-radius: 100%;
    background: cyan;
    box-shadow: inset 0 4px 15px rgba(255, 255, 255, 0.5), inset 0 -4px 15px rgba(0, 0, 0, 0.5);
  }

  &.active,
  &:active {
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
  }
}

.github-link {
  margin: 20px auto;

  a {
    margin: 30px;
    display: inline-block;
    height: 30px;
    width: 30px;
    opacity: 0.3;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    cursor: pointer;
    background-image: url('assets/github.svg');
  }
}

@media (max-width: 650px) {
  .space {
    height: 18px;
    width: 18px;
  }
}

@media (max-width: 590px) {
  .space {
    height: 17px;
    width: 17px;
  }

  body {
    font-size: 1em;
  }

  h1 {
    font-size: 3em;
  }

  .snake.snake-head::after {
    left: -2px;
    bottom: -5px;
    height: 25px;
    width: 25px;
    box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.8);
  }

  .controls {
    margin: 5px auto;
  }

  .instructions {
    margin: 10px auto;

    ul {
      margin: 0 5px;
    }

    .snake.snake-head {
      height: 50px;
      width: 50px;

      &::after {
        height: 50px;
        width: 50px;
      }
    }
  }
}

@media (max-width: 530px) {
  .space {
    height: 16px;
    width: 16px;
  }

  .game-button {
    width: 60px;
    height: 60px;

    &::before {
      width: 76px;
      height: 76px;
      top: -7px;
      left: -8px;
    }
  }
}

@media (max-width: 495px) {
  .space {
    height: 15px;
    width: 15px;
  }
}

@media (max-width: 465px) {
  .snake.snake-head::after {
    left: -1px;
    bottom: -5px;
    height: 22px;
    width: 22px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.8);
  }

  .space {
    height: 14px;
    width: 14px;
  }

  .game-button {
    width: 50px;
    height: 50px;

    &::before {
      width: 64px;
      height: 64px;
      top: -5px;
      left: -7px;
    }
  }
}

@media (max-width: 435px) {
  .space {
    height: 13px;
    width: 13px;
  }
}

@media (max-width: 405px) {
  .snake.snake-head::after {
    left: -3px;
    bottom: -5px;
    height: 18px;
    width: 18px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.8);
  }

  .space {
    height: 12px;
    width: 12px;
  }
}

@media (max-width: 375px) {
  .space {
    height: 11px;
    width: 11px;
  }
}

@media (max-width: 345px) {
  .space {
    height: 10px;
    width: 10px;
  }

  .game-button {
    width: 42px;
    height: 42px;

    &::before {
      width: 56px;
      height: 56px;
      top: -6px;
      left: -7px;
    }
  }
}

@keyframes embiggen {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.3);
  }

  100% {
    transform: scale(1);
  }
}
